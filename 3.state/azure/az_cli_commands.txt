###########################################
# IMPORTANT
###########################################
# Use gitbash, WSL or Linux bash for these commands, else they will fail.
# If you choose to use Powershell, you'll need to tweak the line breaks
# and pick a different way of generating a random bucket name.


###########################################
# Lab Part 1, step 2.
###########################################

# Replace "<name>" below with your "firstname-surname" and then run the commands.
# e.g. az group create --location "uksouth" --name "rg-state-mike-guy"
# If you don't have JQ installed, remove the pipe symbol (|) and everything after it, then manually find the ID.
# Note these IDs in a text file to import shortly.

az group create --location "uksouth" --name "rg-state-<name>" | jq -r ".id"
az network vnet create --name "vnet-state-<name>" --resource-group "rg-state-<name>" --address-prefixes "10.1.0.0/16" | jq -r ".newVNet.id" 



###########################################
# Lab Part 3, step 1.
###########################################
# Note, this doesn't guarantee a unique storage account name. 
# If it fails, re-run a couple of times to generate new random data till it succeeds.
# Replace "<name>" below with your "firstname-surname" and then run the commands.
# e.g. az group create --location "uksouth" --name "rg-state-mike-guy"
# Note the storage account name from the JSON output - you'll need it shortly.

az group create --location "uksouth" --name "rg-statefile-<name>"
az storage account create --name $(tr -dc a-z0-9 </dev/urandom | head -c 13 ; echo '') --resource-group "rg-statefile-<name>"
az storage container create --name tfstate --account-name <name_value_from_previous_command> 

###########################################
# Lab Part 3, step 5.
###########################################
# Replace <account_name> with the bucket name created in lab part 3, step 1.
# Replace "<name>" below with your "firstname-surname" and then run the commands.

az storage account delete --name <account_name> --yes 
az group delete --name "rg-statefile-<name>" --yes
